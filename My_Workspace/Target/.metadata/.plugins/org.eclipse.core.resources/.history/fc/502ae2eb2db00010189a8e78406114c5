/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#include "main.h"
int main(void)
{
	RCC_AHB1ENR_t volatile *pClkCtrl;
	pClkCtrl= (RCC_AHB1ENR_t*) 0x40023830;

	GPIOx_MODE_t volatile *const pGpiobMode;
	pGpiobMode = (GPIOx_MODE_t*) 0x40020400;

	GPIOx_ODR_t volatile *const pPortBOutReg;
	pPortBOutReg = (GPIOx_ODR_t*)0x40020414;

	pClkCtrl-> gpiob_en = 1;

	pGpiobMode->pin_7 = 1;  //*(0x40020400) |= (3<< 30); Compiler will generate the instructions to program the appropriate bit position in the peripheral register address
	//Instead of writing of set and clear value with address we give this process to compiler by simply pGpiobMode->pin_7 = 3; command



	while(1)
	{
			pPortBOutReg->pin_7 = 1;
		     //This loop executes for 10k times
			 for(uint32_t i =0; i<300000;i++);

			 //Trun of the LED but adding not operator at the outreeg
			 pPortBOutReg ->pin_7= 0;

			 for(uint32_t i =0; i<300000;i++);

	}


	/* Loop forever */

}
