
000Helloworld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000bd0  0800013c  0800013c  0000113c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000d0c  08000d0c  00001d0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08000d18  08000d18  00001d18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .fini_array   00000004  08000d1c  08000d1c  00001d1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .data         0000005c  20000008  08000d20  00002008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000016c  20000064  08000d7c  00002064  2**2
                  ALLOC
  7 ._user_heap_stack 00000600  200001d0  08000d7c  000021d0  2**0
                  ALLOC
  8 .ARM.attributes 00000030  00000000  00000000  00002064  2**0
                  CONTENTS, READONLY
  9 .debug_info   000008fe  00000000  00000000  00002094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 000002d8  00000000  00000000  00002992  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 00000120  00000000  00000000  00002c70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 000000c4  00000000  00000000  00002d90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  00002bc7  00000000  00000000  00002e54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   000013ec  00000000  00000000  00005a1b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    000098e7  00000000  00000000  00006e07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000043  00000000  00000000  000106ee  2**0
                  CONTENTS, READONLY
 17 .debug_frame  000009d0  00000000  00000000  00010734  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 00000062  00000000  00000000  00011104  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800013c <__do_global_dtors_aux>:
 800013c:	b510      	push	{r4, lr}
 800013e:	4c05      	ldr	r4, [pc, #20]	@ (8000154 <__do_global_dtors_aux+0x18>)
 8000140:	7823      	ldrb	r3, [r4, #0]
 8000142:	b933      	cbnz	r3, 8000152 <__do_global_dtors_aux+0x16>
 8000144:	4b04      	ldr	r3, [pc, #16]	@ (8000158 <__do_global_dtors_aux+0x1c>)
 8000146:	b113      	cbz	r3, 800014e <__do_global_dtors_aux+0x12>
 8000148:	4804      	ldr	r0, [pc, #16]	@ (800015c <__do_global_dtors_aux+0x20>)
 800014a:	f3af 8000 	nop.w
 800014e:	2301      	movs	r3, #1
 8000150:	7023      	strb	r3, [r4, #0]
 8000152:	bd10      	pop	{r4, pc}
 8000154:	20000064 	.word	0x20000064
 8000158:	00000000 	.word	0x00000000
 800015c:	08000cf4 	.word	0x08000cf4

08000160 <frame_dummy>:
 8000160:	b508      	push	{r3, lr}
 8000162:	4b03      	ldr	r3, [pc, #12]	@ (8000170 <frame_dummy+0x10>)
 8000164:	b11b      	cbz	r3, 800016e <frame_dummy+0xe>
 8000166:	4903      	ldr	r1, [pc, #12]	@ (8000174 <frame_dummy+0x14>)
 8000168:	4803      	ldr	r0, [pc, #12]	@ (8000178 <frame_dummy+0x18>)
 800016a:	f3af 8000 	nop.w
 800016e:	bd08      	pop	{r3, pc}
 8000170:	00000000 	.word	0x00000000
 8000174:	20000068 	.word	0x20000068
 8000178:	08000cf4 	.word	0x08000cf4

0800017c <main>:

#include<stdio.h>


int main(void)
{
 800017c:	b580      	push	{r7, lr}
 800017e:	af00      	add	r7, sp, #0
	printf("Hello world\n");
 8000180:	4802      	ldr	r0, [pc, #8]	@ (800018c <main+0x10>)
 8000182:	f000 fa23 	bl	80005cc <puts>
    /* Loop forever */
	for(;;);
 8000186:	bf00      	nop
 8000188:	e7fd      	b.n	8000186 <main+0xa>
 800018a:	bf00      	nop
 800018c:	08000d0c 	.word	0x08000d0c

08000190 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000190:	b480      	push	{r7}
 8000192:	b083      	sub	sp, #12
 8000194:	af00      	add	r7, sp, #0
 8000196:	4603      	mov	r3, r0
 8000198:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800019a:	4b0f      	ldr	r3, [pc, #60]	@ (80001d8 <ITM_SendChar+0x48>)
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	4a0e      	ldr	r2, [pc, #56]	@ (80001d8 <ITM_SendChar+0x48>)
 80001a0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80001a4:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80001a6:	4b0d      	ldr	r3, [pc, #52]	@ (80001dc <ITM_SendChar+0x4c>)
 80001a8:	681b      	ldr	r3, [r3, #0]
 80001aa:	4a0c      	ldr	r2, [pc, #48]	@ (80001dc <ITM_SendChar+0x4c>)
 80001ac:	f043 0301 	orr.w	r3, r3, #1
 80001b0:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80001b2:	bf00      	nop
 80001b4:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80001b8:	681b      	ldr	r3, [r3, #0]
 80001ba:	f003 0301 	and.w	r3, r3, #1
 80001be:	2b00      	cmp	r3, #0
 80001c0:	d0f8      	beq.n	80001b4 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80001c2:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80001c6:	79fb      	ldrb	r3, [r7, #7]
 80001c8:	6013      	str	r3, [r2, #0]
}
 80001ca:	bf00      	nop
 80001cc:	370c      	adds	r7, #12
 80001ce:	46bd      	mov	sp, r7
 80001d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001d4:	4770      	bx	lr
 80001d6:	bf00      	nop
 80001d8:	e000edfc 	.word	0xe000edfc
 80001dc:	e0000e00 	.word	0xe0000e00

080001e0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80001e0:	b580      	push	{r7, lr}
 80001e2:	b086      	sub	sp, #24
 80001e4:	af00      	add	r7, sp, #0
 80001e6:	60f8      	str	r0, [r7, #12]
 80001e8:	60b9      	str	r1, [r7, #8]
 80001ea:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001ec:	2300      	movs	r3, #0
 80001ee:	617b      	str	r3, [r7, #20]
 80001f0:	e00a      	b.n	8000208 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80001f2:	f3af 8000 	nop.w
 80001f6:	4601      	mov	r1, r0
 80001f8:	68bb      	ldr	r3, [r7, #8]
 80001fa:	1c5a      	adds	r2, r3, #1
 80001fc:	60ba      	str	r2, [r7, #8]
 80001fe:	b2ca      	uxtb	r2, r1
 8000200:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000202:	697b      	ldr	r3, [r7, #20]
 8000204:	3301      	adds	r3, #1
 8000206:	617b      	str	r3, [r7, #20]
 8000208:	697a      	ldr	r2, [r7, #20]
 800020a:	687b      	ldr	r3, [r7, #4]
 800020c:	429a      	cmp	r2, r3
 800020e:	dbf0      	blt.n	80001f2 <_read+0x12>
  }

  return len;
 8000210:	687b      	ldr	r3, [r7, #4]
}
 8000212:	4618      	mov	r0, r3
 8000214:	3718      	adds	r7, #24
 8000216:	46bd      	mov	sp, r7
 8000218:	bd80      	pop	{r7, pc}

0800021a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800021a:	b580      	push	{r7, lr}
 800021c:	b086      	sub	sp, #24
 800021e:	af00      	add	r7, sp, #0
 8000220:	60f8      	str	r0, [r7, #12]
 8000222:	60b9      	str	r1, [r7, #8]
 8000224:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000226:	2300      	movs	r3, #0
 8000228:	617b      	str	r3, [r7, #20]
 800022a:	e009      	b.n	8000240 <_write+0x26>
  {
//    __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 800022c:	68bb      	ldr	r3, [r7, #8]
 800022e:	1c5a      	adds	r2, r3, #1
 8000230:	60ba      	str	r2, [r7, #8]
 8000232:	781b      	ldrb	r3, [r3, #0]
 8000234:	4618      	mov	r0, r3
 8000236:	f7ff ffab 	bl	8000190 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800023a:	697b      	ldr	r3, [r7, #20]
 800023c:	3301      	adds	r3, #1
 800023e:	617b      	str	r3, [r7, #20]
 8000240:	697a      	ldr	r2, [r7, #20]
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	429a      	cmp	r2, r3
 8000246:	dbf1      	blt.n	800022c <_write+0x12>
  }
  return len;
 8000248:	687b      	ldr	r3, [r7, #4]
}
 800024a:	4618      	mov	r0, r3
 800024c:	3718      	adds	r7, #24
 800024e:	46bd      	mov	sp, r7
 8000250:	bd80      	pop	{r7, pc}

08000252 <_close>:

int _close(int file)
{
 8000252:	b480      	push	{r7}
 8000254:	b083      	sub	sp, #12
 8000256:	af00      	add	r7, sp, #0
 8000258:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800025a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800025e:	4618      	mov	r0, r3
 8000260:	370c      	adds	r7, #12
 8000262:	46bd      	mov	sp, r7
 8000264:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000268:	4770      	bx	lr

0800026a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800026a:	b480      	push	{r7}
 800026c:	b083      	sub	sp, #12
 800026e:	af00      	add	r7, sp, #0
 8000270:	6078      	str	r0, [r7, #4]
 8000272:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000274:	683b      	ldr	r3, [r7, #0]
 8000276:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800027a:	605a      	str	r2, [r3, #4]
  return 0;
 800027c:	2300      	movs	r3, #0
}
 800027e:	4618      	mov	r0, r3
 8000280:	370c      	adds	r7, #12
 8000282:	46bd      	mov	sp, r7
 8000284:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000288:	4770      	bx	lr

0800028a <_isatty>:

int _isatty(int file)
{
 800028a:	b480      	push	{r7}
 800028c:	b083      	sub	sp, #12
 800028e:	af00      	add	r7, sp, #0
 8000290:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000292:	2301      	movs	r3, #1
}
 8000294:	4618      	mov	r0, r3
 8000296:	370c      	adds	r7, #12
 8000298:	46bd      	mov	sp, r7
 800029a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800029e:	4770      	bx	lr

080002a0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002a0:	b480      	push	{r7}
 80002a2:	b085      	sub	sp, #20
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	60f8      	str	r0, [r7, #12]
 80002a8:	60b9      	str	r1, [r7, #8]
 80002aa:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80002ac:	2300      	movs	r3, #0
}
 80002ae:	4618      	mov	r0, r3
 80002b0:	3714      	adds	r7, #20
 80002b2:	46bd      	mov	sp, r7
 80002b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b8:	4770      	bx	lr
	...

080002bc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002bc:	b580      	push	{r7, lr}
 80002be:	b086      	sub	sp, #24
 80002c0:	af00      	add	r7, sp, #0
 80002c2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002c4:	4a14      	ldr	r2, [pc, #80]	@ (8000318 <_sbrk+0x5c>)
 80002c6:	4b15      	ldr	r3, [pc, #84]	@ (800031c <_sbrk+0x60>)
 80002c8:	1ad3      	subs	r3, r2, r3
 80002ca:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002cc:	697b      	ldr	r3, [r7, #20]
 80002ce:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80002d0:	4b13      	ldr	r3, [pc, #76]	@ (8000320 <_sbrk+0x64>)
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	2b00      	cmp	r3, #0
 80002d6:	d102      	bne.n	80002de <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80002d8:	4b11      	ldr	r3, [pc, #68]	@ (8000320 <_sbrk+0x64>)
 80002da:	4a12      	ldr	r2, [pc, #72]	@ (8000324 <_sbrk+0x68>)
 80002dc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80002de:	4b10      	ldr	r3, [pc, #64]	@ (8000320 <_sbrk+0x64>)
 80002e0:	681a      	ldr	r2, [r3, #0]
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4413      	add	r3, r2
 80002e6:	693a      	ldr	r2, [r7, #16]
 80002e8:	429a      	cmp	r2, r3
 80002ea:	d207      	bcs.n	80002fc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80002ec:	f000 fa9c 	bl	8000828 <__errno>
 80002f0:	4603      	mov	r3, r0
 80002f2:	220c      	movs	r2, #12
 80002f4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80002f6:	f04f 33ff 	mov.w	r3, #4294967295
 80002fa:	e009      	b.n	8000310 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80002fc:	4b08      	ldr	r3, [pc, #32]	@ (8000320 <_sbrk+0x64>)
 80002fe:	681b      	ldr	r3, [r3, #0]
 8000300:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000302:	4b07      	ldr	r3, [pc, #28]	@ (8000320 <_sbrk+0x64>)
 8000304:	681a      	ldr	r2, [r3, #0]
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	4413      	add	r3, r2
 800030a:	4a05      	ldr	r2, [pc, #20]	@ (8000320 <_sbrk+0x64>)
 800030c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800030e:	68fb      	ldr	r3, [r7, #12]
}
 8000310:	4618      	mov	r0, r3
 8000312:	3718      	adds	r7, #24
 8000314:	46bd      	mov	sp, r7
 8000316:	bd80      	pop	{r7, pc}
 8000318:	20030000 	.word	0x20030000
 800031c:	00000400 	.word	0x00000400
 8000320:	20000080 	.word	0x20000080
 8000324:	200001d0 	.word	0x200001d0

08000328 <CopyDataInit>:
  bl LoopCopyDataInit
.endm

.section  .text.data_initializers
CopyDataInit:
  ldr r4, [r2, r3]
 8000328:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800032a:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800032c:	3304      	adds	r3, #4

0800032e <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800032e:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000330:	428c      	cmp	r4, r1
  bcc  CopyDataInit
 8000332:	d3f9      	bcc.n	8000328 <CopyDataInit>
  bx lr
 8000334:	4770      	bx	lr

08000336 <FillZerobss>:

FillZerobss:
  str  r3, [r0]
 8000336:	6003      	str	r3, [r0, #0]
  adds r0, r0, #4
 8000338:	3004      	adds	r0, #4

0800033a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r0, r1
 800033a:	4288      	cmp	r0, r1
  bcc FillZerobss
 800033c:	d3fb      	bcc.n	8000336 <FillZerobss>
  bx lr
 800033e:	4770      	bx	lr

08000340 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000340:	480c      	ldr	r0, [pc, #48]	@ (8000374 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000342:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000344:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  INIT_DATA _sdata, _edata, _sidata
 8000348:	480b      	ldr	r0, [pc, #44]	@ (8000378 <LoopForever+0x6>)
 800034a:	490c      	ldr	r1, [pc, #48]	@ (800037c <LoopForever+0xa>)
 800034c:	4a0c      	ldr	r2, [pc, #48]	@ (8000380 <LoopForever+0xe>)
 800034e:	2300      	movs	r3, #0
 8000350:	f7ff ffed 	bl	800032e <LoopCopyDataInit>
  INIT_DATA _sMB_MEM2, _eMB_MEM2, _siMB_MEM2
 8000354:	480b      	ldr	r0, [pc, #44]	@ (8000384 <LoopForever+0x12>)
 8000356:	490c      	ldr	r1, [pc, #48]	@ (8000388 <LoopForever+0x16>)
 8000358:	4a0c      	ldr	r2, [pc, #48]	@ (800038c <LoopForever+0x1a>)
 800035a:	2300      	movs	r3, #0
 800035c:	f7ff ffe7 	bl	800032e <LoopCopyDataInit>

/* Zero fill the bss segments. */
  INIT_BSS _sbss, _ebss
 8000360:	480b      	ldr	r0, [pc, #44]	@ (8000390 <LoopForever+0x1e>)
 8000362:	490c      	ldr	r1, [pc, #48]	@ (8000394 <LoopForever+0x22>)
 8000364:	2300      	movs	r3, #0
 8000366:	f7ff ffe8 	bl	800033a <LoopFillZerobss>


/* Call static constructors */
  bl __libc_init_array
 800036a:	f000 fa63 	bl	8000834 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 800036e:	f7ff ff05 	bl	800017c <main>

08000372 <LoopForever>:

LoopForever:
  b LoopForever
 8000372:	e7fe      	b.n	8000372 <LoopForever>
  ldr   r0, =_estack
 8000374:	20030000 	.word	0x20030000
  INIT_DATA _sdata, _edata, _sidata
 8000378:	20000008 	.word	0x20000008
 800037c:	20000064 	.word	0x20000064
 8000380:	08000d20 	.word	0x08000d20
  INIT_DATA _sMB_MEM2, _eMB_MEM2, _siMB_MEM2
 8000384:	20030000 	.word	0x20030000
 8000388:	20030000 	.word	0x20030000
 800038c:	08000d7c 	.word	0x08000d7c
  INIT_BSS _sbss, _ebss
 8000390:	20000064 	.word	0x20000064
 8000394:	200001d0 	.word	0x200001d0

08000398 <ADC1_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000398:	e7fe      	b.n	8000398 <ADC1_IRQHandler>
	...

0800039c <std>:
 800039c:	2300      	movs	r3, #0
 800039e:	b510      	push	{r4, lr}
 80003a0:	4604      	mov	r4, r0
 80003a2:	e9c0 3300 	strd	r3, r3, [r0]
 80003a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80003aa:	6083      	str	r3, [r0, #8]
 80003ac:	8181      	strh	r1, [r0, #12]
 80003ae:	6643      	str	r3, [r0, #100]	@ 0x64
 80003b0:	81c2      	strh	r2, [r0, #14]
 80003b2:	6183      	str	r3, [r0, #24]
 80003b4:	4619      	mov	r1, r3
 80003b6:	2208      	movs	r2, #8
 80003b8:	305c      	adds	r0, #92	@ 0x5c
 80003ba:	f000 f9e7 	bl	800078c <memset>
 80003be:	4b0d      	ldr	r3, [pc, #52]	@ (80003f4 <std+0x58>)
 80003c0:	6263      	str	r3, [r4, #36]	@ 0x24
 80003c2:	4b0d      	ldr	r3, [pc, #52]	@ (80003f8 <std+0x5c>)
 80003c4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80003c6:	4b0d      	ldr	r3, [pc, #52]	@ (80003fc <std+0x60>)
 80003c8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80003ca:	4b0d      	ldr	r3, [pc, #52]	@ (8000400 <std+0x64>)
 80003cc:	6323      	str	r3, [r4, #48]	@ 0x30
 80003ce:	4b0d      	ldr	r3, [pc, #52]	@ (8000404 <std+0x68>)
 80003d0:	6224      	str	r4, [r4, #32]
 80003d2:	429c      	cmp	r4, r3
 80003d4:	d006      	beq.n	80003e4 <std+0x48>
 80003d6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80003da:	4294      	cmp	r4, r2
 80003dc:	d002      	beq.n	80003e4 <std+0x48>
 80003de:	33d0      	adds	r3, #208	@ 0xd0
 80003e0:	429c      	cmp	r4, r3
 80003e2:	d105      	bne.n	80003f0 <std+0x54>
 80003e4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80003e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80003ec:	f000 ba46 	b.w	800087c <__retarget_lock_init_recursive>
 80003f0:	bd10      	pop	{r4, pc}
 80003f2:	bf00      	nop
 80003f4:	080005dd 	.word	0x080005dd
 80003f8:	080005ff 	.word	0x080005ff
 80003fc:	08000637 	.word	0x08000637
 8000400:	0800065b 	.word	0x0800065b
 8000404:	20000084 	.word	0x20000084

08000408 <stdio_exit_handler>:
 8000408:	4a02      	ldr	r2, [pc, #8]	@ (8000414 <stdio_exit_handler+0xc>)
 800040a:	4903      	ldr	r1, [pc, #12]	@ (8000418 <stdio_exit_handler+0x10>)
 800040c:	4803      	ldr	r0, [pc, #12]	@ (800041c <stdio_exit_handler+0x14>)
 800040e:	f000 b869 	b.w	80004e4 <_fwalk_sglue>
 8000412:	bf00      	nop
 8000414:	20000008 	.word	0x20000008
 8000418:	08000b7d 	.word	0x08000b7d
 800041c:	20000018 	.word	0x20000018

08000420 <cleanup_stdio>:
 8000420:	6841      	ldr	r1, [r0, #4]
 8000422:	4b0c      	ldr	r3, [pc, #48]	@ (8000454 <cleanup_stdio+0x34>)
 8000424:	4299      	cmp	r1, r3
 8000426:	b510      	push	{r4, lr}
 8000428:	4604      	mov	r4, r0
 800042a:	d001      	beq.n	8000430 <cleanup_stdio+0x10>
 800042c:	f000 fba6 	bl	8000b7c <_fflush_r>
 8000430:	68a1      	ldr	r1, [r4, #8]
 8000432:	4b09      	ldr	r3, [pc, #36]	@ (8000458 <cleanup_stdio+0x38>)
 8000434:	4299      	cmp	r1, r3
 8000436:	d002      	beq.n	800043e <cleanup_stdio+0x1e>
 8000438:	4620      	mov	r0, r4
 800043a:	f000 fb9f 	bl	8000b7c <_fflush_r>
 800043e:	68e1      	ldr	r1, [r4, #12]
 8000440:	4b06      	ldr	r3, [pc, #24]	@ (800045c <cleanup_stdio+0x3c>)
 8000442:	4299      	cmp	r1, r3
 8000444:	d004      	beq.n	8000450 <cleanup_stdio+0x30>
 8000446:	4620      	mov	r0, r4
 8000448:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800044c:	f000 bb96 	b.w	8000b7c <_fflush_r>
 8000450:	bd10      	pop	{r4, pc}
 8000452:	bf00      	nop
 8000454:	20000084 	.word	0x20000084
 8000458:	200000ec 	.word	0x200000ec
 800045c:	20000154 	.word	0x20000154

08000460 <global_stdio_init.part.0>:
 8000460:	b510      	push	{r4, lr}
 8000462:	4b0b      	ldr	r3, [pc, #44]	@ (8000490 <global_stdio_init.part.0+0x30>)
 8000464:	4c0b      	ldr	r4, [pc, #44]	@ (8000494 <global_stdio_init.part.0+0x34>)
 8000466:	4a0c      	ldr	r2, [pc, #48]	@ (8000498 <global_stdio_init.part.0+0x38>)
 8000468:	601a      	str	r2, [r3, #0]
 800046a:	4620      	mov	r0, r4
 800046c:	2200      	movs	r2, #0
 800046e:	2104      	movs	r1, #4
 8000470:	f7ff ff94 	bl	800039c <std>
 8000474:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000478:	2201      	movs	r2, #1
 800047a:	2109      	movs	r1, #9
 800047c:	f7ff ff8e 	bl	800039c <std>
 8000480:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000484:	2202      	movs	r2, #2
 8000486:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800048a:	2112      	movs	r1, #18
 800048c:	f7ff bf86 	b.w	800039c <std>
 8000490:	200001bc 	.word	0x200001bc
 8000494:	20000084 	.word	0x20000084
 8000498:	08000409 	.word	0x08000409

0800049c <__sfp_lock_acquire>:
 800049c:	4801      	ldr	r0, [pc, #4]	@ (80004a4 <__sfp_lock_acquire+0x8>)
 800049e:	f000 b9ee 	b.w	800087e <__retarget_lock_acquire_recursive>
 80004a2:	bf00      	nop
 80004a4:	200001c5 	.word	0x200001c5

080004a8 <__sfp_lock_release>:
 80004a8:	4801      	ldr	r0, [pc, #4]	@ (80004b0 <__sfp_lock_release+0x8>)
 80004aa:	f000 b9e9 	b.w	8000880 <__retarget_lock_release_recursive>
 80004ae:	bf00      	nop
 80004b0:	200001c5 	.word	0x200001c5

080004b4 <__sinit>:
 80004b4:	b510      	push	{r4, lr}
 80004b6:	4604      	mov	r4, r0
 80004b8:	f7ff fff0 	bl	800049c <__sfp_lock_acquire>
 80004bc:	6a23      	ldr	r3, [r4, #32]
 80004be:	b11b      	cbz	r3, 80004c8 <__sinit+0x14>
 80004c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004c4:	f7ff bff0 	b.w	80004a8 <__sfp_lock_release>
 80004c8:	4b04      	ldr	r3, [pc, #16]	@ (80004dc <__sinit+0x28>)
 80004ca:	6223      	str	r3, [r4, #32]
 80004cc:	4b04      	ldr	r3, [pc, #16]	@ (80004e0 <__sinit+0x2c>)
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	2b00      	cmp	r3, #0
 80004d2:	d1f5      	bne.n	80004c0 <__sinit+0xc>
 80004d4:	f7ff ffc4 	bl	8000460 <global_stdio_init.part.0>
 80004d8:	e7f2      	b.n	80004c0 <__sinit+0xc>
 80004da:	bf00      	nop
 80004dc:	08000421 	.word	0x08000421
 80004e0:	200001bc 	.word	0x200001bc

080004e4 <_fwalk_sglue>:
 80004e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80004e8:	4607      	mov	r7, r0
 80004ea:	4688      	mov	r8, r1
 80004ec:	4614      	mov	r4, r2
 80004ee:	2600      	movs	r6, #0
 80004f0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80004f4:	f1b9 0901 	subs.w	r9, r9, #1
 80004f8:	d505      	bpl.n	8000506 <_fwalk_sglue+0x22>
 80004fa:	6824      	ldr	r4, [r4, #0]
 80004fc:	2c00      	cmp	r4, #0
 80004fe:	d1f7      	bne.n	80004f0 <_fwalk_sglue+0xc>
 8000500:	4630      	mov	r0, r6
 8000502:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000506:	89ab      	ldrh	r3, [r5, #12]
 8000508:	2b01      	cmp	r3, #1
 800050a:	d907      	bls.n	800051c <_fwalk_sglue+0x38>
 800050c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000510:	3301      	adds	r3, #1
 8000512:	d003      	beq.n	800051c <_fwalk_sglue+0x38>
 8000514:	4629      	mov	r1, r5
 8000516:	4638      	mov	r0, r7
 8000518:	47c0      	blx	r8
 800051a:	4306      	orrs	r6, r0
 800051c:	3568      	adds	r5, #104	@ 0x68
 800051e:	e7e9      	b.n	80004f4 <_fwalk_sglue+0x10>

08000520 <_puts_r>:
 8000520:	6a03      	ldr	r3, [r0, #32]
 8000522:	b570      	push	{r4, r5, r6, lr}
 8000524:	6884      	ldr	r4, [r0, #8]
 8000526:	4605      	mov	r5, r0
 8000528:	460e      	mov	r6, r1
 800052a:	b90b      	cbnz	r3, 8000530 <_puts_r+0x10>
 800052c:	f7ff ffc2 	bl	80004b4 <__sinit>
 8000530:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000532:	07db      	lsls	r3, r3, #31
 8000534:	d405      	bmi.n	8000542 <_puts_r+0x22>
 8000536:	89a3      	ldrh	r3, [r4, #12]
 8000538:	0598      	lsls	r0, r3, #22
 800053a:	d402      	bmi.n	8000542 <_puts_r+0x22>
 800053c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800053e:	f000 f99e 	bl	800087e <__retarget_lock_acquire_recursive>
 8000542:	89a3      	ldrh	r3, [r4, #12]
 8000544:	0719      	lsls	r1, r3, #28
 8000546:	d502      	bpl.n	800054e <_puts_r+0x2e>
 8000548:	6923      	ldr	r3, [r4, #16]
 800054a:	2b00      	cmp	r3, #0
 800054c:	d135      	bne.n	80005ba <_puts_r+0x9a>
 800054e:	4621      	mov	r1, r4
 8000550:	4628      	mov	r0, r5
 8000552:	f000 f8c5 	bl	80006e0 <__swsetup_r>
 8000556:	b380      	cbz	r0, 80005ba <_puts_r+0x9a>
 8000558:	f04f 35ff 	mov.w	r5, #4294967295
 800055c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800055e:	07da      	lsls	r2, r3, #31
 8000560:	d405      	bmi.n	800056e <_puts_r+0x4e>
 8000562:	89a3      	ldrh	r3, [r4, #12]
 8000564:	059b      	lsls	r3, r3, #22
 8000566:	d402      	bmi.n	800056e <_puts_r+0x4e>
 8000568:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800056a:	f000 f989 	bl	8000880 <__retarget_lock_release_recursive>
 800056e:	4628      	mov	r0, r5
 8000570:	bd70      	pop	{r4, r5, r6, pc}
 8000572:	2b00      	cmp	r3, #0
 8000574:	da04      	bge.n	8000580 <_puts_r+0x60>
 8000576:	69a2      	ldr	r2, [r4, #24]
 8000578:	429a      	cmp	r2, r3
 800057a:	dc17      	bgt.n	80005ac <_puts_r+0x8c>
 800057c:	290a      	cmp	r1, #10
 800057e:	d015      	beq.n	80005ac <_puts_r+0x8c>
 8000580:	6823      	ldr	r3, [r4, #0]
 8000582:	1c5a      	adds	r2, r3, #1
 8000584:	6022      	str	r2, [r4, #0]
 8000586:	7019      	strb	r1, [r3, #0]
 8000588:	68a3      	ldr	r3, [r4, #8]
 800058a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800058e:	3b01      	subs	r3, #1
 8000590:	60a3      	str	r3, [r4, #8]
 8000592:	2900      	cmp	r1, #0
 8000594:	d1ed      	bne.n	8000572 <_puts_r+0x52>
 8000596:	2b00      	cmp	r3, #0
 8000598:	da11      	bge.n	80005be <_puts_r+0x9e>
 800059a:	4622      	mov	r2, r4
 800059c:	210a      	movs	r1, #10
 800059e:	4628      	mov	r0, r5
 80005a0:	f000 f85f 	bl	8000662 <__swbuf_r>
 80005a4:	3001      	adds	r0, #1
 80005a6:	d0d7      	beq.n	8000558 <_puts_r+0x38>
 80005a8:	250a      	movs	r5, #10
 80005aa:	e7d7      	b.n	800055c <_puts_r+0x3c>
 80005ac:	4622      	mov	r2, r4
 80005ae:	4628      	mov	r0, r5
 80005b0:	f000 f857 	bl	8000662 <__swbuf_r>
 80005b4:	3001      	adds	r0, #1
 80005b6:	d1e7      	bne.n	8000588 <_puts_r+0x68>
 80005b8:	e7ce      	b.n	8000558 <_puts_r+0x38>
 80005ba:	3e01      	subs	r6, #1
 80005bc:	e7e4      	b.n	8000588 <_puts_r+0x68>
 80005be:	6823      	ldr	r3, [r4, #0]
 80005c0:	1c5a      	adds	r2, r3, #1
 80005c2:	6022      	str	r2, [r4, #0]
 80005c4:	220a      	movs	r2, #10
 80005c6:	701a      	strb	r2, [r3, #0]
 80005c8:	e7ee      	b.n	80005a8 <_puts_r+0x88>
	...

080005cc <puts>:
 80005cc:	4b02      	ldr	r3, [pc, #8]	@ (80005d8 <puts+0xc>)
 80005ce:	4601      	mov	r1, r0
 80005d0:	6818      	ldr	r0, [r3, #0]
 80005d2:	f7ff bfa5 	b.w	8000520 <_puts_r>
 80005d6:	bf00      	nop
 80005d8:	20000014 	.word	0x20000014

080005dc <__sread>:
 80005dc:	b510      	push	{r4, lr}
 80005de:	460c      	mov	r4, r1
 80005e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005e4:	f000 f8fc 	bl	80007e0 <_read_r>
 80005e8:	2800      	cmp	r0, #0
 80005ea:	bfab      	itete	ge
 80005ec:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80005ee:	89a3      	ldrhlt	r3, [r4, #12]
 80005f0:	181b      	addge	r3, r3, r0
 80005f2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80005f6:	bfac      	ite	ge
 80005f8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80005fa:	81a3      	strhlt	r3, [r4, #12]
 80005fc:	bd10      	pop	{r4, pc}

080005fe <__swrite>:
 80005fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000602:	461f      	mov	r7, r3
 8000604:	898b      	ldrh	r3, [r1, #12]
 8000606:	05db      	lsls	r3, r3, #23
 8000608:	4605      	mov	r5, r0
 800060a:	460c      	mov	r4, r1
 800060c:	4616      	mov	r6, r2
 800060e:	d505      	bpl.n	800061c <__swrite+0x1e>
 8000610:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000614:	2302      	movs	r3, #2
 8000616:	2200      	movs	r2, #0
 8000618:	f000 f8d0 	bl	80007bc <_lseek_r>
 800061c:	89a3      	ldrh	r3, [r4, #12]
 800061e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000622:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000626:	81a3      	strh	r3, [r4, #12]
 8000628:	4632      	mov	r2, r6
 800062a:	463b      	mov	r3, r7
 800062c:	4628      	mov	r0, r5
 800062e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000632:	f000 b8e7 	b.w	8000804 <_write_r>

08000636 <__sseek>:
 8000636:	b510      	push	{r4, lr}
 8000638:	460c      	mov	r4, r1
 800063a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800063e:	f000 f8bd 	bl	80007bc <_lseek_r>
 8000642:	1c43      	adds	r3, r0, #1
 8000644:	89a3      	ldrh	r3, [r4, #12]
 8000646:	bf15      	itete	ne
 8000648:	6560      	strne	r0, [r4, #84]	@ 0x54
 800064a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800064e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000652:	81a3      	strheq	r3, [r4, #12]
 8000654:	bf18      	it	ne
 8000656:	81a3      	strhne	r3, [r4, #12]
 8000658:	bd10      	pop	{r4, pc}

0800065a <__sclose>:
 800065a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800065e:	f000 b89d 	b.w	800079c <_close_r>

08000662 <__swbuf_r>:
 8000662:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000664:	460e      	mov	r6, r1
 8000666:	4614      	mov	r4, r2
 8000668:	4605      	mov	r5, r0
 800066a:	b118      	cbz	r0, 8000674 <__swbuf_r+0x12>
 800066c:	6a03      	ldr	r3, [r0, #32]
 800066e:	b90b      	cbnz	r3, 8000674 <__swbuf_r+0x12>
 8000670:	f7ff ff20 	bl	80004b4 <__sinit>
 8000674:	69a3      	ldr	r3, [r4, #24]
 8000676:	60a3      	str	r3, [r4, #8]
 8000678:	89a3      	ldrh	r3, [r4, #12]
 800067a:	071a      	lsls	r2, r3, #28
 800067c:	d501      	bpl.n	8000682 <__swbuf_r+0x20>
 800067e:	6923      	ldr	r3, [r4, #16]
 8000680:	b943      	cbnz	r3, 8000694 <__swbuf_r+0x32>
 8000682:	4621      	mov	r1, r4
 8000684:	4628      	mov	r0, r5
 8000686:	f000 f82b 	bl	80006e0 <__swsetup_r>
 800068a:	b118      	cbz	r0, 8000694 <__swbuf_r+0x32>
 800068c:	f04f 37ff 	mov.w	r7, #4294967295
 8000690:	4638      	mov	r0, r7
 8000692:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000694:	6823      	ldr	r3, [r4, #0]
 8000696:	6922      	ldr	r2, [r4, #16]
 8000698:	1a98      	subs	r0, r3, r2
 800069a:	6963      	ldr	r3, [r4, #20]
 800069c:	b2f6      	uxtb	r6, r6
 800069e:	4283      	cmp	r3, r0
 80006a0:	4637      	mov	r7, r6
 80006a2:	dc05      	bgt.n	80006b0 <__swbuf_r+0x4e>
 80006a4:	4621      	mov	r1, r4
 80006a6:	4628      	mov	r0, r5
 80006a8:	f000 fa68 	bl	8000b7c <_fflush_r>
 80006ac:	2800      	cmp	r0, #0
 80006ae:	d1ed      	bne.n	800068c <__swbuf_r+0x2a>
 80006b0:	68a3      	ldr	r3, [r4, #8]
 80006b2:	3b01      	subs	r3, #1
 80006b4:	60a3      	str	r3, [r4, #8]
 80006b6:	6823      	ldr	r3, [r4, #0]
 80006b8:	1c5a      	adds	r2, r3, #1
 80006ba:	6022      	str	r2, [r4, #0]
 80006bc:	701e      	strb	r6, [r3, #0]
 80006be:	6962      	ldr	r2, [r4, #20]
 80006c0:	1c43      	adds	r3, r0, #1
 80006c2:	429a      	cmp	r2, r3
 80006c4:	d004      	beq.n	80006d0 <__swbuf_r+0x6e>
 80006c6:	89a3      	ldrh	r3, [r4, #12]
 80006c8:	07db      	lsls	r3, r3, #31
 80006ca:	d5e1      	bpl.n	8000690 <__swbuf_r+0x2e>
 80006cc:	2e0a      	cmp	r6, #10
 80006ce:	d1df      	bne.n	8000690 <__swbuf_r+0x2e>
 80006d0:	4621      	mov	r1, r4
 80006d2:	4628      	mov	r0, r5
 80006d4:	f000 fa52 	bl	8000b7c <_fflush_r>
 80006d8:	2800      	cmp	r0, #0
 80006da:	d0d9      	beq.n	8000690 <__swbuf_r+0x2e>
 80006dc:	e7d6      	b.n	800068c <__swbuf_r+0x2a>
	...

080006e0 <__swsetup_r>:
 80006e0:	b538      	push	{r3, r4, r5, lr}
 80006e2:	4b29      	ldr	r3, [pc, #164]	@ (8000788 <__swsetup_r+0xa8>)
 80006e4:	4605      	mov	r5, r0
 80006e6:	6818      	ldr	r0, [r3, #0]
 80006e8:	460c      	mov	r4, r1
 80006ea:	b118      	cbz	r0, 80006f4 <__swsetup_r+0x14>
 80006ec:	6a03      	ldr	r3, [r0, #32]
 80006ee:	b90b      	cbnz	r3, 80006f4 <__swsetup_r+0x14>
 80006f0:	f7ff fee0 	bl	80004b4 <__sinit>
 80006f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006f8:	0719      	lsls	r1, r3, #28
 80006fa:	d422      	bmi.n	8000742 <__swsetup_r+0x62>
 80006fc:	06da      	lsls	r2, r3, #27
 80006fe:	d407      	bmi.n	8000710 <__swsetup_r+0x30>
 8000700:	2209      	movs	r2, #9
 8000702:	602a      	str	r2, [r5, #0]
 8000704:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000708:	81a3      	strh	r3, [r4, #12]
 800070a:	f04f 30ff 	mov.w	r0, #4294967295
 800070e:	e033      	b.n	8000778 <__swsetup_r+0x98>
 8000710:	0758      	lsls	r0, r3, #29
 8000712:	d512      	bpl.n	800073a <__swsetup_r+0x5a>
 8000714:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000716:	b141      	cbz	r1, 800072a <__swsetup_r+0x4a>
 8000718:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800071c:	4299      	cmp	r1, r3
 800071e:	d002      	beq.n	8000726 <__swsetup_r+0x46>
 8000720:	4628      	mov	r0, r5
 8000722:	f000 f8af 	bl	8000884 <_free_r>
 8000726:	2300      	movs	r3, #0
 8000728:	6363      	str	r3, [r4, #52]	@ 0x34
 800072a:	89a3      	ldrh	r3, [r4, #12]
 800072c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000730:	81a3      	strh	r3, [r4, #12]
 8000732:	2300      	movs	r3, #0
 8000734:	6063      	str	r3, [r4, #4]
 8000736:	6923      	ldr	r3, [r4, #16]
 8000738:	6023      	str	r3, [r4, #0]
 800073a:	89a3      	ldrh	r3, [r4, #12]
 800073c:	f043 0308 	orr.w	r3, r3, #8
 8000740:	81a3      	strh	r3, [r4, #12]
 8000742:	6923      	ldr	r3, [r4, #16]
 8000744:	b94b      	cbnz	r3, 800075a <__swsetup_r+0x7a>
 8000746:	89a3      	ldrh	r3, [r4, #12]
 8000748:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800074c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000750:	d003      	beq.n	800075a <__swsetup_r+0x7a>
 8000752:	4621      	mov	r1, r4
 8000754:	4628      	mov	r0, r5
 8000756:	f000 fa5f 	bl	8000c18 <__smakebuf_r>
 800075a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800075e:	f013 0201 	ands.w	r2, r3, #1
 8000762:	d00a      	beq.n	800077a <__swsetup_r+0x9a>
 8000764:	2200      	movs	r2, #0
 8000766:	60a2      	str	r2, [r4, #8]
 8000768:	6962      	ldr	r2, [r4, #20]
 800076a:	4252      	negs	r2, r2
 800076c:	61a2      	str	r2, [r4, #24]
 800076e:	6922      	ldr	r2, [r4, #16]
 8000770:	b942      	cbnz	r2, 8000784 <__swsetup_r+0xa4>
 8000772:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000776:	d1c5      	bne.n	8000704 <__swsetup_r+0x24>
 8000778:	bd38      	pop	{r3, r4, r5, pc}
 800077a:	0799      	lsls	r1, r3, #30
 800077c:	bf58      	it	pl
 800077e:	6962      	ldrpl	r2, [r4, #20]
 8000780:	60a2      	str	r2, [r4, #8]
 8000782:	e7f4      	b.n	800076e <__swsetup_r+0x8e>
 8000784:	2000      	movs	r0, #0
 8000786:	e7f7      	b.n	8000778 <__swsetup_r+0x98>
 8000788:	20000014 	.word	0x20000014

0800078c <memset>:
 800078c:	4402      	add	r2, r0
 800078e:	4603      	mov	r3, r0
 8000790:	4293      	cmp	r3, r2
 8000792:	d100      	bne.n	8000796 <memset+0xa>
 8000794:	4770      	bx	lr
 8000796:	f803 1b01 	strb.w	r1, [r3], #1
 800079a:	e7f9      	b.n	8000790 <memset+0x4>

0800079c <_close_r>:
 800079c:	b538      	push	{r3, r4, r5, lr}
 800079e:	4d06      	ldr	r5, [pc, #24]	@ (80007b8 <_close_r+0x1c>)
 80007a0:	2300      	movs	r3, #0
 80007a2:	4604      	mov	r4, r0
 80007a4:	4608      	mov	r0, r1
 80007a6:	602b      	str	r3, [r5, #0]
 80007a8:	f7ff fd53 	bl	8000252 <_close>
 80007ac:	1c43      	adds	r3, r0, #1
 80007ae:	d102      	bne.n	80007b6 <_close_r+0x1a>
 80007b0:	682b      	ldr	r3, [r5, #0]
 80007b2:	b103      	cbz	r3, 80007b6 <_close_r+0x1a>
 80007b4:	6023      	str	r3, [r4, #0]
 80007b6:	bd38      	pop	{r3, r4, r5, pc}
 80007b8:	200001c0 	.word	0x200001c0

080007bc <_lseek_r>:
 80007bc:	b538      	push	{r3, r4, r5, lr}
 80007be:	4d07      	ldr	r5, [pc, #28]	@ (80007dc <_lseek_r+0x20>)
 80007c0:	4604      	mov	r4, r0
 80007c2:	4608      	mov	r0, r1
 80007c4:	4611      	mov	r1, r2
 80007c6:	2200      	movs	r2, #0
 80007c8:	602a      	str	r2, [r5, #0]
 80007ca:	461a      	mov	r2, r3
 80007cc:	f7ff fd68 	bl	80002a0 <_lseek>
 80007d0:	1c43      	adds	r3, r0, #1
 80007d2:	d102      	bne.n	80007da <_lseek_r+0x1e>
 80007d4:	682b      	ldr	r3, [r5, #0]
 80007d6:	b103      	cbz	r3, 80007da <_lseek_r+0x1e>
 80007d8:	6023      	str	r3, [r4, #0]
 80007da:	bd38      	pop	{r3, r4, r5, pc}
 80007dc:	200001c0 	.word	0x200001c0

080007e0 <_read_r>:
 80007e0:	b538      	push	{r3, r4, r5, lr}
 80007e2:	4d07      	ldr	r5, [pc, #28]	@ (8000800 <_read_r+0x20>)
 80007e4:	4604      	mov	r4, r0
 80007e6:	4608      	mov	r0, r1
 80007e8:	4611      	mov	r1, r2
 80007ea:	2200      	movs	r2, #0
 80007ec:	602a      	str	r2, [r5, #0]
 80007ee:	461a      	mov	r2, r3
 80007f0:	f7ff fcf6 	bl	80001e0 <_read>
 80007f4:	1c43      	adds	r3, r0, #1
 80007f6:	d102      	bne.n	80007fe <_read_r+0x1e>
 80007f8:	682b      	ldr	r3, [r5, #0]
 80007fa:	b103      	cbz	r3, 80007fe <_read_r+0x1e>
 80007fc:	6023      	str	r3, [r4, #0]
 80007fe:	bd38      	pop	{r3, r4, r5, pc}
 8000800:	200001c0 	.word	0x200001c0

08000804 <_write_r>:
 8000804:	b538      	push	{r3, r4, r5, lr}
 8000806:	4d07      	ldr	r5, [pc, #28]	@ (8000824 <_write_r+0x20>)
 8000808:	4604      	mov	r4, r0
 800080a:	4608      	mov	r0, r1
 800080c:	4611      	mov	r1, r2
 800080e:	2200      	movs	r2, #0
 8000810:	602a      	str	r2, [r5, #0]
 8000812:	461a      	mov	r2, r3
 8000814:	f7ff fd01 	bl	800021a <_write>
 8000818:	1c43      	adds	r3, r0, #1
 800081a:	d102      	bne.n	8000822 <_write_r+0x1e>
 800081c:	682b      	ldr	r3, [r5, #0]
 800081e:	b103      	cbz	r3, 8000822 <_write_r+0x1e>
 8000820:	6023      	str	r3, [r4, #0]
 8000822:	bd38      	pop	{r3, r4, r5, pc}
 8000824:	200001c0 	.word	0x200001c0

08000828 <__errno>:
 8000828:	4b01      	ldr	r3, [pc, #4]	@ (8000830 <__errno+0x8>)
 800082a:	6818      	ldr	r0, [r3, #0]
 800082c:	4770      	bx	lr
 800082e:	bf00      	nop
 8000830:	20000014 	.word	0x20000014

08000834 <__libc_init_array>:
 8000834:	b570      	push	{r4, r5, r6, lr}
 8000836:	4d0d      	ldr	r5, [pc, #52]	@ (800086c <__libc_init_array+0x38>)
 8000838:	4c0d      	ldr	r4, [pc, #52]	@ (8000870 <__libc_init_array+0x3c>)
 800083a:	1b64      	subs	r4, r4, r5
 800083c:	10a4      	asrs	r4, r4, #2
 800083e:	2600      	movs	r6, #0
 8000840:	42a6      	cmp	r6, r4
 8000842:	d109      	bne.n	8000858 <__libc_init_array+0x24>
 8000844:	4d0b      	ldr	r5, [pc, #44]	@ (8000874 <__libc_init_array+0x40>)
 8000846:	4c0c      	ldr	r4, [pc, #48]	@ (8000878 <__libc_init_array+0x44>)
 8000848:	f000 fa54 	bl	8000cf4 <_init>
 800084c:	1b64      	subs	r4, r4, r5
 800084e:	10a4      	asrs	r4, r4, #2
 8000850:	2600      	movs	r6, #0
 8000852:	42a6      	cmp	r6, r4
 8000854:	d105      	bne.n	8000862 <__libc_init_array+0x2e>
 8000856:	bd70      	pop	{r4, r5, r6, pc}
 8000858:	f855 3b04 	ldr.w	r3, [r5], #4
 800085c:	4798      	blx	r3
 800085e:	3601      	adds	r6, #1
 8000860:	e7ee      	b.n	8000840 <__libc_init_array+0xc>
 8000862:	f855 3b04 	ldr.w	r3, [r5], #4
 8000866:	4798      	blx	r3
 8000868:	3601      	adds	r6, #1
 800086a:	e7f2      	b.n	8000852 <__libc_init_array+0x1e>
 800086c:	08000d18 	.word	0x08000d18
 8000870:	08000d18 	.word	0x08000d18
 8000874:	08000d18 	.word	0x08000d18
 8000878:	08000d1c 	.word	0x08000d1c

0800087c <__retarget_lock_init_recursive>:
 800087c:	4770      	bx	lr

0800087e <__retarget_lock_acquire_recursive>:
 800087e:	4770      	bx	lr

08000880 <__retarget_lock_release_recursive>:
 8000880:	4770      	bx	lr
	...

08000884 <_free_r>:
 8000884:	b538      	push	{r3, r4, r5, lr}
 8000886:	4605      	mov	r5, r0
 8000888:	2900      	cmp	r1, #0
 800088a:	d041      	beq.n	8000910 <_free_r+0x8c>
 800088c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000890:	1f0c      	subs	r4, r1, #4
 8000892:	2b00      	cmp	r3, #0
 8000894:	bfb8      	it	lt
 8000896:	18e4      	addlt	r4, r4, r3
 8000898:	f000 f8e0 	bl	8000a5c <__malloc_lock>
 800089c:	4a1d      	ldr	r2, [pc, #116]	@ (8000914 <_free_r+0x90>)
 800089e:	6813      	ldr	r3, [r2, #0]
 80008a0:	b933      	cbnz	r3, 80008b0 <_free_r+0x2c>
 80008a2:	6063      	str	r3, [r4, #4]
 80008a4:	6014      	str	r4, [r2, #0]
 80008a6:	4628      	mov	r0, r5
 80008a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80008ac:	f000 b8dc 	b.w	8000a68 <__malloc_unlock>
 80008b0:	42a3      	cmp	r3, r4
 80008b2:	d908      	bls.n	80008c6 <_free_r+0x42>
 80008b4:	6820      	ldr	r0, [r4, #0]
 80008b6:	1821      	adds	r1, r4, r0
 80008b8:	428b      	cmp	r3, r1
 80008ba:	bf01      	itttt	eq
 80008bc:	6819      	ldreq	r1, [r3, #0]
 80008be:	685b      	ldreq	r3, [r3, #4]
 80008c0:	1809      	addeq	r1, r1, r0
 80008c2:	6021      	streq	r1, [r4, #0]
 80008c4:	e7ed      	b.n	80008a2 <_free_r+0x1e>
 80008c6:	461a      	mov	r2, r3
 80008c8:	685b      	ldr	r3, [r3, #4]
 80008ca:	b10b      	cbz	r3, 80008d0 <_free_r+0x4c>
 80008cc:	42a3      	cmp	r3, r4
 80008ce:	d9fa      	bls.n	80008c6 <_free_r+0x42>
 80008d0:	6811      	ldr	r1, [r2, #0]
 80008d2:	1850      	adds	r0, r2, r1
 80008d4:	42a0      	cmp	r0, r4
 80008d6:	d10b      	bne.n	80008f0 <_free_r+0x6c>
 80008d8:	6820      	ldr	r0, [r4, #0]
 80008da:	4401      	add	r1, r0
 80008dc:	1850      	adds	r0, r2, r1
 80008de:	4283      	cmp	r3, r0
 80008e0:	6011      	str	r1, [r2, #0]
 80008e2:	d1e0      	bne.n	80008a6 <_free_r+0x22>
 80008e4:	6818      	ldr	r0, [r3, #0]
 80008e6:	685b      	ldr	r3, [r3, #4]
 80008e8:	6053      	str	r3, [r2, #4]
 80008ea:	4408      	add	r0, r1
 80008ec:	6010      	str	r0, [r2, #0]
 80008ee:	e7da      	b.n	80008a6 <_free_r+0x22>
 80008f0:	d902      	bls.n	80008f8 <_free_r+0x74>
 80008f2:	230c      	movs	r3, #12
 80008f4:	602b      	str	r3, [r5, #0]
 80008f6:	e7d6      	b.n	80008a6 <_free_r+0x22>
 80008f8:	6820      	ldr	r0, [r4, #0]
 80008fa:	1821      	adds	r1, r4, r0
 80008fc:	428b      	cmp	r3, r1
 80008fe:	bf04      	itt	eq
 8000900:	6819      	ldreq	r1, [r3, #0]
 8000902:	685b      	ldreq	r3, [r3, #4]
 8000904:	6063      	str	r3, [r4, #4]
 8000906:	bf04      	itt	eq
 8000908:	1809      	addeq	r1, r1, r0
 800090a:	6021      	streq	r1, [r4, #0]
 800090c:	6054      	str	r4, [r2, #4]
 800090e:	e7ca      	b.n	80008a6 <_free_r+0x22>
 8000910:	bd38      	pop	{r3, r4, r5, pc}
 8000912:	bf00      	nop
 8000914:	200001cc 	.word	0x200001cc

08000918 <sbrk_aligned>:
 8000918:	b570      	push	{r4, r5, r6, lr}
 800091a:	4e0f      	ldr	r6, [pc, #60]	@ (8000958 <sbrk_aligned+0x40>)
 800091c:	460c      	mov	r4, r1
 800091e:	6831      	ldr	r1, [r6, #0]
 8000920:	4605      	mov	r5, r0
 8000922:	b911      	cbnz	r1, 800092a <sbrk_aligned+0x12>
 8000924:	f000 f9d6 	bl	8000cd4 <_sbrk_r>
 8000928:	6030      	str	r0, [r6, #0]
 800092a:	4621      	mov	r1, r4
 800092c:	4628      	mov	r0, r5
 800092e:	f000 f9d1 	bl	8000cd4 <_sbrk_r>
 8000932:	1c43      	adds	r3, r0, #1
 8000934:	d103      	bne.n	800093e <sbrk_aligned+0x26>
 8000936:	f04f 34ff 	mov.w	r4, #4294967295
 800093a:	4620      	mov	r0, r4
 800093c:	bd70      	pop	{r4, r5, r6, pc}
 800093e:	1cc4      	adds	r4, r0, #3
 8000940:	f024 0403 	bic.w	r4, r4, #3
 8000944:	42a0      	cmp	r0, r4
 8000946:	d0f8      	beq.n	800093a <sbrk_aligned+0x22>
 8000948:	1a21      	subs	r1, r4, r0
 800094a:	4628      	mov	r0, r5
 800094c:	f000 f9c2 	bl	8000cd4 <_sbrk_r>
 8000950:	3001      	adds	r0, #1
 8000952:	d1f2      	bne.n	800093a <sbrk_aligned+0x22>
 8000954:	e7ef      	b.n	8000936 <sbrk_aligned+0x1e>
 8000956:	bf00      	nop
 8000958:	200001c8 	.word	0x200001c8

0800095c <_malloc_r>:
 800095c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000960:	1ccd      	adds	r5, r1, #3
 8000962:	f025 0503 	bic.w	r5, r5, #3
 8000966:	3508      	adds	r5, #8
 8000968:	2d0c      	cmp	r5, #12
 800096a:	bf38      	it	cc
 800096c:	250c      	movcc	r5, #12
 800096e:	2d00      	cmp	r5, #0
 8000970:	4606      	mov	r6, r0
 8000972:	db01      	blt.n	8000978 <_malloc_r+0x1c>
 8000974:	42a9      	cmp	r1, r5
 8000976:	d904      	bls.n	8000982 <_malloc_r+0x26>
 8000978:	230c      	movs	r3, #12
 800097a:	6033      	str	r3, [r6, #0]
 800097c:	2000      	movs	r0, #0
 800097e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000982:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000a58 <_malloc_r+0xfc>
 8000986:	f000 f869 	bl	8000a5c <__malloc_lock>
 800098a:	f8d8 3000 	ldr.w	r3, [r8]
 800098e:	461c      	mov	r4, r3
 8000990:	bb44      	cbnz	r4, 80009e4 <_malloc_r+0x88>
 8000992:	4629      	mov	r1, r5
 8000994:	4630      	mov	r0, r6
 8000996:	f7ff ffbf 	bl	8000918 <sbrk_aligned>
 800099a:	1c43      	adds	r3, r0, #1
 800099c:	4604      	mov	r4, r0
 800099e:	d158      	bne.n	8000a52 <_malloc_r+0xf6>
 80009a0:	f8d8 4000 	ldr.w	r4, [r8]
 80009a4:	4627      	mov	r7, r4
 80009a6:	2f00      	cmp	r7, #0
 80009a8:	d143      	bne.n	8000a32 <_malloc_r+0xd6>
 80009aa:	2c00      	cmp	r4, #0
 80009ac:	d04b      	beq.n	8000a46 <_malloc_r+0xea>
 80009ae:	6823      	ldr	r3, [r4, #0]
 80009b0:	4639      	mov	r1, r7
 80009b2:	4630      	mov	r0, r6
 80009b4:	eb04 0903 	add.w	r9, r4, r3
 80009b8:	f000 f98c 	bl	8000cd4 <_sbrk_r>
 80009bc:	4581      	cmp	r9, r0
 80009be:	d142      	bne.n	8000a46 <_malloc_r+0xea>
 80009c0:	6821      	ldr	r1, [r4, #0]
 80009c2:	1a6d      	subs	r5, r5, r1
 80009c4:	4629      	mov	r1, r5
 80009c6:	4630      	mov	r0, r6
 80009c8:	f7ff ffa6 	bl	8000918 <sbrk_aligned>
 80009cc:	3001      	adds	r0, #1
 80009ce:	d03a      	beq.n	8000a46 <_malloc_r+0xea>
 80009d0:	6823      	ldr	r3, [r4, #0]
 80009d2:	442b      	add	r3, r5
 80009d4:	6023      	str	r3, [r4, #0]
 80009d6:	f8d8 3000 	ldr.w	r3, [r8]
 80009da:	685a      	ldr	r2, [r3, #4]
 80009dc:	bb62      	cbnz	r2, 8000a38 <_malloc_r+0xdc>
 80009de:	f8c8 7000 	str.w	r7, [r8]
 80009e2:	e00f      	b.n	8000a04 <_malloc_r+0xa8>
 80009e4:	6822      	ldr	r2, [r4, #0]
 80009e6:	1b52      	subs	r2, r2, r5
 80009e8:	d420      	bmi.n	8000a2c <_malloc_r+0xd0>
 80009ea:	2a0b      	cmp	r2, #11
 80009ec:	d917      	bls.n	8000a1e <_malloc_r+0xc2>
 80009ee:	1961      	adds	r1, r4, r5
 80009f0:	42a3      	cmp	r3, r4
 80009f2:	6025      	str	r5, [r4, #0]
 80009f4:	bf18      	it	ne
 80009f6:	6059      	strne	r1, [r3, #4]
 80009f8:	6863      	ldr	r3, [r4, #4]
 80009fa:	bf08      	it	eq
 80009fc:	f8c8 1000 	streq.w	r1, [r8]
 8000a00:	5162      	str	r2, [r4, r5]
 8000a02:	604b      	str	r3, [r1, #4]
 8000a04:	4630      	mov	r0, r6
 8000a06:	f000 f82f 	bl	8000a68 <__malloc_unlock>
 8000a0a:	f104 000b 	add.w	r0, r4, #11
 8000a0e:	1d23      	adds	r3, r4, #4
 8000a10:	f020 0007 	bic.w	r0, r0, #7
 8000a14:	1ac2      	subs	r2, r0, r3
 8000a16:	bf1c      	itt	ne
 8000a18:	1a1b      	subne	r3, r3, r0
 8000a1a:	50a3      	strne	r3, [r4, r2]
 8000a1c:	e7af      	b.n	800097e <_malloc_r+0x22>
 8000a1e:	6862      	ldr	r2, [r4, #4]
 8000a20:	42a3      	cmp	r3, r4
 8000a22:	bf0c      	ite	eq
 8000a24:	f8c8 2000 	streq.w	r2, [r8]
 8000a28:	605a      	strne	r2, [r3, #4]
 8000a2a:	e7eb      	b.n	8000a04 <_malloc_r+0xa8>
 8000a2c:	4623      	mov	r3, r4
 8000a2e:	6864      	ldr	r4, [r4, #4]
 8000a30:	e7ae      	b.n	8000990 <_malloc_r+0x34>
 8000a32:	463c      	mov	r4, r7
 8000a34:	687f      	ldr	r7, [r7, #4]
 8000a36:	e7b6      	b.n	80009a6 <_malloc_r+0x4a>
 8000a38:	461a      	mov	r2, r3
 8000a3a:	685b      	ldr	r3, [r3, #4]
 8000a3c:	42a3      	cmp	r3, r4
 8000a3e:	d1fb      	bne.n	8000a38 <_malloc_r+0xdc>
 8000a40:	2300      	movs	r3, #0
 8000a42:	6053      	str	r3, [r2, #4]
 8000a44:	e7de      	b.n	8000a04 <_malloc_r+0xa8>
 8000a46:	230c      	movs	r3, #12
 8000a48:	6033      	str	r3, [r6, #0]
 8000a4a:	4630      	mov	r0, r6
 8000a4c:	f000 f80c 	bl	8000a68 <__malloc_unlock>
 8000a50:	e794      	b.n	800097c <_malloc_r+0x20>
 8000a52:	6005      	str	r5, [r0, #0]
 8000a54:	e7d6      	b.n	8000a04 <_malloc_r+0xa8>
 8000a56:	bf00      	nop
 8000a58:	200001cc 	.word	0x200001cc

08000a5c <__malloc_lock>:
 8000a5c:	4801      	ldr	r0, [pc, #4]	@ (8000a64 <__malloc_lock+0x8>)
 8000a5e:	f7ff bf0e 	b.w	800087e <__retarget_lock_acquire_recursive>
 8000a62:	bf00      	nop
 8000a64:	200001c4 	.word	0x200001c4

08000a68 <__malloc_unlock>:
 8000a68:	4801      	ldr	r0, [pc, #4]	@ (8000a70 <__malloc_unlock+0x8>)
 8000a6a:	f7ff bf09 	b.w	8000880 <__retarget_lock_release_recursive>
 8000a6e:	bf00      	nop
 8000a70:	200001c4 	.word	0x200001c4

08000a74 <__sflush_r>:
 8000a74:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000a78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a7c:	0716      	lsls	r6, r2, #28
 8000a7e:	4605      	mov	r5, r0
 8000a80:	460c      	mov	r4, r1
 8000a82:	d454      	bmi.n	8000b2e <__sflush_r+0xba>
 8000a84:	684b      	ldr	r3, [r1, #4]
 8000a86:	2b00      	cmp	r3, #0
 8000a88:	dc02      	bgt.n	8000a90 <__sflush_r+0x1c>
 8000a8a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000a8c:	2b00      	cmp	r3, #0
 8000a8e:	dd48      	ble.n	8000b22 <__sflush_r+0xae>
 8000a90:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000a92:	2e00      	cmp	r6, #0
 8000a94:	d045      	beq.n	8000b22 <__sflush_r+0xae>
 8000a96:	2300      	movs	r3, #0
 8000a98:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000a9c:	682f      	ldr	r7, [r5, #0]
 8000a9e:	6a21      	ldr	r1, [r4, #32]
 8000aa0:	602b      	str	r3, [r5, #0]
 8000aa2:	d030      	beq.n	8000b06 <__sflush_r+0x92>
 8000aa4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000aa6:	89a3      	ldrh	r3, [r4, #12]
 8000aa8:	0759      	lsls	r1, r3, #29
 8000aaa:	d505      	bpl.n	8000ab8 <__sflush_r+0x44>
 8000aac:	6863      	ldr	r3, [r4, #4]
 8000aae:	1ad2      	subs	r2, r2, r3
 8000ab0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000ab2:	b10b      	cbz	r3, 8000ab8 <__sflush_r+0x44>
 8000ab4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000ab6:	1ad2      	subs	r2, r2, r3
 8000ab8:	2300      	movs	r3, #0
 8000aba:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000abc:	6a21      	ldr	r1, [r4, #32]
 8000abe:	4628      	mov	r0, r5
 8000ac0:	47b0      	blx	r6
 8000ac2:	1c43      	adds	r3, r0, #1
 8000ac4:	89a3      	ldrh	r3, [r4, #12]
 8000ac6:	d106      	bne.n	8000ad6 <__sflush_r+0x62>
 8000ac8:	6829      	ldr	r1, [r5, #0]
 8000aca:	291d      	cmp	r1, #29
 8000acc:	d82b      	bhi.n	8000b26 <__sflush_r+0xb2>
 8000ace:	4a2a      	ldr	r2, [pc, #168]	@ (8000b78 <__sflush_r+0x104>)
 8000ad0:	40ca      	lsrs	r2, r1
 8000ad2:	07d6      	lsls	r6, r2, #31
 8000ad4:	d527      	bpl.n	8000b26 <__sflush_r+0xb2>
 8000ad6:	2200      	movs	r2, #0
 8000ad8:	6062      	str	r2, [r4, #4]
 8000ada:	04d9      	lsls	r1, r3, #19
 8000adc:	6922      	ldr	r2, [r4, #16]
 8000ade:	6022      	str	r2, [r4, #0]
 8000ae0:	d504      	bpl.n	8000aec <__sflush_r+0x78>
 8000ae2:	1c42      	adds	r2, r0, #1
 8000ae4:	d101      	bne.n	8000aea <__sflush_r+0x76>
 8000ae6:	682b      	ldr	r3, [r5, #0]
 8000ae8:	b903      	cbnz	r3, 8000aec <__sflush_r+0x78>
 8000aea:	6560      	str	r0, [r4, #84]	@ 0x54
 8000aec:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000aee:	602f      	str	r7, [r5, #0]
 8000af0:	b1b9      	cbz	r1, 8000b22 <__sflush_r+0xae>
 8000af2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000af6:	4299      	cmp	r1, r3
 8000af8:	d002      	beq.n	8000b00 <__sflush_r+0x8c>
 8000afa:	4628      	mov	r0, r5
 8000afc:	f7ff fec2 	bl	8000884 <_free_r>
 8000b00:	2300      	movs	r3, #0
 8000b02:	6363      	str	r3, [r4, #52]	@ 0x34
 8000b04:	e00d      	b.n	8000b22 <__sflush_r+0xae>
 8000b06:	2301      	movs	r3, #1
 8000b08:	4628      	mov	r0, r5
 8000b0a:	47b0      	blx	r6
 8000b0c:	4602      	mov	r2, r0
 8000b0e:	1c50      	adds	r0, r2, #1
 8000b10:	d1c9      	bne.n	8000aa6 <__sflush_r+0x32>
 8000b12:	682b      	ldr	r3, [r5, #0]
 8000b14:	2b00      	cmp	r3, #0
 8000b16:	d0c6      	beq.n	8000aa6 <__sflush_r+0x32>
 8000b18:	2b1d      	cmp	r3, #29
 8000b1a:	d001      	beq.n	8000b20 <__sflush_r+0xac>
 8000b1c:	2b16      	cmp	r3, #22
 8000b1e:	d11e      	bne.n	8000b5e <__sflush_r+0xea>
 8000b20:	602f      	str	r7, [r5, #0]
 8000b22:	2000      	movs	r0, #0
 8000b24:	e022      	b.n	8000b6c <__sflush_r+0xf8>
 8000b26:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000b2a:	b21b      	sxth	r3, r3
 8000b2c:	e01b      	b.n	8000b66 <__sflush_r+0xf2>
 8000b2e:	690f      	ldr	r7, [r1, #16]
 8000b30:	2f00      	cmp	r7, #0
 8000b32:	d0f6      	beq.n	8000b22 <__sflush_r+0xae>
 8000b34:	0793      	lsls	r3, r2, #30
 8000b36:	680e      	ldr	r6, [r1, #0]
 8000b38:	bf08      	it	eq
 8000b3a:	694b      	ldreq	r3, [r1, #20]
 8000b3c:	600f      	str	r7, [r1, #0]
 8000b3e:	bf18      	it	ne
 8000b40:	2300      	movne	r3, #0
 8000b42:	eba6 0807 	sub.w	r8, r6, r7
 8000b46:	608b      	str	r3, [r1, #8]
 8000b48:	f1b8 0f00 	cmp.w	r8, #0
 8000b4c:	dde9      	ble.n	8000b22 <__sflush_r+0xae>
 8000b4e:	6a21      	ldr	r1, [r4, #32]
 8000b50:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8000b52:	4643      	mov	r3, r8
 8000b54:	463a      	mov	r2, r7
 8000b56:	4628      	mov	r0, r5
 8000b58:	47b0      	blx	r6
 8000b5a:	2800      	cmp	r0, #0
 8000b5c:	dc08      	bgt.n	8000b70 <__sflush_r+0xfc>
 8000b5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b62:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000b66:	81a3      	strh	r3, [r4, #12]
 8000b68:	f04f 30ff 	mov.w	r0, #4294967295
 8000b6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b70:	4407      	add	r7, r0
 8000b72:	eba8 0800 	sub.w	r8, r8, r0
 8000b76:	e7e7      	b.n	8000b48 <__sflush_r+0xd4>
 8000b78:	20400001 	.word	0x20400001

08000b7c <_fflush_r>:
 8000b7c:	b538      	push	{r3, r4, r5, lr}
 8000b7e:	690b      	ldr	r3, [r1, #16]
 8000b80:	4605      	mov	r5, r0
 8000b82:	460c      	mov	r4, r1
 8000b84:	b913      	cbnz	r3, 8000b8c <_fflush_r+0x10>
 8000b86:	2500      	movs	r5, #0
 8000b88:	4628      	mov	r0, r5
 8000b8a:	bd38      	pop	{r3, r4, r5, pc}
 8000b8c:	b118      	cbz	r0, 8000b96 <_fflush_r+0x1a>
 8000b8e:	6a03      	ldr	r3, [r0, #32]
 8000b90:	b90b      	cbnz	r3, 8000b96 <_fflush_r+0x1a>
 8000b92:	f7ff fc8f 	bl	80004b4 <__sinit>
 8000b96:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b9a:	2b00      	cmp	r3, #0
 8000b9c:	d0f3      	beq.n	8000b86 <_fflush_r+0xa>
 8000b9e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000ba0:	07d0      	lsls	r0, r2, #31
 8000ba2:	d404      	bmi.n	8000bae <_fflush_r+0x32>
 8000ba4:	0599      	lsls	r1, r3, #22
 8000ba6:	d402      	bmi.n	8000bae <_fflush_r+0x32>
 8000ba8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000baa:	f7ff fe68 	bl	800087e <__retarget_lock_acquire_recursive>
 8000bae:	4628      	mov	r0, r5
 8000bb0:	4621      	mov	r1, r4
 8000bb2:	f7ff ff5f 	bl	8000a74 <__sflush_r>
 8000bb6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000bb8:	07da      	lsls	r2, r3, #31
 8000bba:	4605      	mov	r5, r0
 8000bbc:	d4e4      	bmi.n	8000b88 <_fflush_r+0xc>
 8000bbe:	89a3      	ldrh	r3, [r4, #12]
 8000bc0:	059b      	lsls	r3, r3, #22
 8000bc2:	d4e1      	bmi.n	8000b88 <_fflush_r+0xc>
 8000bc4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000bc6:	f7ff fe5b 	bl	8000880 <__retarget_lock_release_recursive>
 8000bca:	e7dd      	b.n	8000b88 <_fflush_r+0xc>

08000bcc <__swhatbuf_r>:
 8000bcc:	b570      	push	{r4, r5, r6, lr}
 8000bce:	460c      	mov	r4, r1
 8000bd0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bd4:	2900      	cmp	r1, #0
 8000bd6:	b096      	sub	sp, #88	@ 0x58
 8000bd8:	4615      	mov	r5, r2
 8000bda:	461e      	mov	r6, r3
 8000bdc:	da0d      	bge.n	8000bfa <__swhatbuf_r+0x2e>
 8000bde:	89a3      	ldrh	r3, [r4, #12]
 8000be0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8000be4:	f04f 0100 	mov.w	r1, #0
 8000be8:	bf14      	ite	ne
 8000bea:	2340      	movne	r3, #64	@ 0x40
 8000bec:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8000bf0:	2000      	movs	r0, #0
 8000bf2:	6031      	str	r1, [r6, #0]
 8000bf4:	602b      	str	r3, [r5, #0]
 8000bf6:	b016      	add	sp, #88	@ 0x58
 8000bf8:	bd70      	pop	{r4, r5, r6, pc}
 8000bfa:	466a      	mov	r2, sp
 8000bfc:	f000 f848 	bl	8000c90 <_fstat_r>
 8000c00:	2800      	cmp	r0, #0
 8000c02:	dbec      	blt.n	8000bde <__swhatbuf_r+0x12>
 8000c04:	9901      	ldr	r1, [sp, #4]
 8000c06:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8000c0a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8000c0e:	4259      	negs	r1, r3
 8000c10:	4159      	adcs	r1, r3
 8000c12:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000c16:	e7eb      	b.n	8000bf0 <__swhatbuf_r+0x24>

08000c18 <__smakebuf_r>:
 8000c18:	898b      	ldrh	r3, [r1, #12]
 8000c1a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000c1c:	079d      	lsls	r5, r3, #30
 8000c1e:	4606      	mov	r6, r0
 8000c20:	460c      	mov	r4, r1
 8000c22:	d507      	bpl.n	8000c34 <__smakebuf_r+0x1c>
 8000c24:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8000c28:	6023      	str	r3, [r4, #0]
 8000c2a:	6123      	str	r3, [r4, #16]
 8000c2c:	2301      	movs	r3, #1
 8000c2e:	6163      	str	r3, [r4, #20]
 8000c30:	b003      	add	sp, #12
 8000c32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c34:	ab01      	add	r3, sp, #4
 8000c36:	466a      	mov	r2, sp
 8000c38:	f7ff ffc8 	bl	8000bcc <__swhatbuf_r>
 8000c3c:	9f00      	ldr	r7, [sp, #0]
 8000c3e:	4605      	mov	r5, r0
 8000c40:	4639      	mov	r1, r7
 8000c42:	4630      	mov	r0, r6
 8000c44:	f7ff fe8a 	bl	800095c <_malloc_r>
 8000c48:	b948      	cbnz	r0, 8000c5e <__smakebuf_r+0x46>
 8000c4a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c4e:	059a      	lsls	r2, r3, #22
 8000c50:	d4ee      	bmi.n	8000c30 <__smakebuf_r+0x18>
 8000c52:	f023 0303 	bic.w	r3, r3, #3
 8000c56:	f043 0302 	orr.w	r3, r3, #2
 8000c5a:	81a3      	strh	r3, [r4, #12]
 8000c5c:	e7e2      	b.n	8000c24 <__smakebuf_r+0xc>
 8000c5e:	89a3      	ldrh	r3, [r4, #12]
 8000c60:	6020      	str	r0, [r4, #0]
 8000c62:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000c66:	81a3      	strh	r3, [r4, #12]
 8000c68:	9b01      	ldr	r3, [sp, #4]
 8000c6a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8000c6e:	b15b      	cbz	r3, 8000c88 <__smakebuf_r+0x70>
 8000c70:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c74:	4630      	mov	r0, r6
 8000c76:	f000 f81d 	bl	8000cb4 <_isatty_r>
 8000c7a:	b128      	cbz	r0, 8000c88 <__smakebuf_r+0x70>
 8000c7c:	89a3      	ldrh	r3, [r4, #12]
 8000c7e:	f023 0303 	bic.w	r3, r3, #3
 8000c82:	f043 0301 	orr.w	r3, r3, #1
 8000c86:	81a3      	strh	r3, [r4, #12]
 8000c88:	89a3      	ldrh	r3, [r4, #12]
 8000c8a:	431d      	orrs	r5, r3
 8000c8c:	81a5      	strh	r5, [r4, #12]
 8000c8e:	e7cf      	b.n	8000c30 <__smakebuf_r+0x18>

08000c90 <_fstat_r>:
 8000c90:	b538      	push	{r3, r4, r5, lr}
 8000c92:	4d07      	ldr	r5, [pc, #28]	@ (8000cb0 <_fstat_r+0x20>)
 8000c94:	2300      	movs	r3, #0
 8000c96:	4604      	mov	r4, r0
 8000c98:	4608      	mov	r0, r1
 8000c9a:	4611      	mov	r1, r2
 8000c9c:	602b      	str	r3, [r5, #0]
 8000c9e:	f7ff fae4 	bl	800026a <_fstat>
 8000ca2:	1c43      	adds	r3, r0, #1
 8000ca4:	d102      	bne.n	8000cac <_fstat_r+0x1c>
 8000ca6:	682b      	ldr	r3, [r5, #0]
 8000ca8:	b103      	cbz	r3, 8000cac <_fstat_r+0x1c>
 8000caa:	6023      	str	r3, [r4, #0]
 8000cac:	bd38      	pop	{r3, r4, r5, pc}
 8000cae:	bf00      	nop
 8000cb0:	200001c0 	.word	0x200001c0

08000cb4 <_isatty_r>:
 8000cb4:	b538      	push	{r3, r4, r5, lr}
 8000cb6:	4d06      	ldr	r5, [pc, #24]	@ (8000cd0 <_isatty_r+0x1c>)
 8000cb8:	2300      	movs	r3, #0
 8000cba:	4604      	mov	r4, r0
 8000cbc:	4608      	mov	r0, r1
 8000cbe:	602b      	str	r3, [r5, #0]
 8000cc0:	f7ff fae3 	bl	800028a <_isatty>
 8000cc4:	1c43      	adds	r3, r0, #1
 8000cc6:	d102      	bne.n	8000cce <_isatty_r+0x1a>
 8000cc8:	682b      	ldr	r3, [r5, #0]
 8000cca:	b103      	cbz	r3, 8000cce <_isatty_r+0x1a>
 8000ccc:	6023      	str	r3, [r4, #0]
 8000cce:	bd38      	pop	{r3, r4, r5, pc}
 8000cd0:	200001c0 	.word	0x200001c0

08000cd4 <_sbrk_r>:
 8000cd4:	b538      	push	{r3, r4, r5, lr}
 8000cd6:	4d06      	ldr	r5, [pc, #24]	@ (8000cf0 <_sbrk_r+0x1c>)
 8000cd8:	2300      	movs	r3, #0
 8000cda:	4604      	mov	r4, r0
 8000cdc:	4608      	mov	r0, r1
 8000cde:	602b      	str	r3, [r5, #0]
 8000ce0:	f7ff faec 	bl	80002bc <_sbrk>
 8000ce4:	1c43      	adds	r3, r0, #1
 8000ce6:	d102      	bne.n	8000cee <_sbrk_r+0x1a>
 8000ce8:	682b      	ldr	r3, [r5, #0]
 8000cea:	b103      	cbz	r3, 8000cee <_sbrk_r+0x1a>
 8000cec:	6023      	str	r3, [r4, #0]
 8000cee:	bd38      	pop	{r3, r4, r5, pc}
 8000cf0:	200001c0 	.word	0x200001c0

08000cf4 <_init>:
 8000cf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cf6:	bf00      	nop
 8000cf8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000cfa:	bc08      	pop	{r3}
 8000cfc:	469e      	mov	lr, r3
 8000cfe:	4770      	bx	lr

08000d00 <_fini>:
 8000d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d02:	bf00      	nop
 8000d04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d06:	bc08      	pop	{r3}
 8000d08:	469e      	mov	lr, r3
 8000d0a:	4770      	bx	lr
